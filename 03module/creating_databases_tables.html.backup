<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Creating Databases and Tables - PHP WordPress Course</title>
    <link rel="stylesheet" href="/assets/css/main.css">
    <style>
        .sql-command {
            background: #1e293b;
            color: #10b981;
            padding: 20px;
            border-radius: 8px;
            margin: 20px 0;
            font-family: 'Courier New', monospace;
            overflow-x: auto;
        }
        .sql-keyword {
            color: #60a5fa;
            font-weight: bold;
        }
        .sql-datatype {
            color: #fbbf24;
        }
        .sql-string {
            color: #86efac;
        }
        .sql-comment {
            color: #94a3b8;
            font-style: italic;
        }
        .table-visualization {
            background: white;
            border: 2px solid #667eea;
            border-radius: 8px;
            overflow: hidden;
            margin: 20px 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .table-header {
            background: #667eea;
            color: white;
            padding: 10px;
            font-weight: bold;
            text-align: center;
        }
        .table-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
            border-bottom: 1px solid #e5e7eb;
        }
        .table-row.header {
            background: #f3f4f6;
            font-weight: bold;
        }
        .table-cell {
            padding: 10px;
            text-align: center;
        }
        .data-type-card {
            background: linear-gradient(135deg, #f0f9ff, #e0f2fe);
            border-left: 4px solid #0891b2;
            padding: 15px;
            margin: 15px 0;
            border-radius: 0 8px 8px 0;
        }
        .interactive-builder {
            background: #f9fafb;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            padding: 20px;
            margin: 20px 0;
        }
        .builder-input {
            margin: 10px 0;
            padding: 10px;
            width: 100%;
            border: 1px solid #d1d5db;
            border-radius: 4px;
        }
        .constraint-badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            margin: 0 5px;
            font-weight: bold;
        }
        .constraint-pk {
            background: #fef3c7;
            color: #92400e;
        }
        .constraint-fk {
            background: #ede9fe;
            color: #5b21b6;
        }
        .constraint-nn {
            background: #fee2e2;
            color: #991b1b;
        }
        .constraint-uq {
            background: #d1fae5;
            color: #065f46;
        }
    </style>
</head>
<body>
    <div class="lesson-container">
        <header class="lesson-header">
            <h1>Creating Databases and Tables</h1>
            <p class="lesson-subtitle">Building Your Data Structure with SQL Commands</p>
        </header>

        <nav class="lesson-nav">
            <a href="/03module/database_design_principles.html">‚Üê Previous Lesson</a>
            <a href="/03module/data_types.html">Next Lesson ‚Üí</a>
        </nav>

        <section class="lesson-content">
            <div class="learning-objectives">
                <h2>üéØ What You'll Learn</h2>
                <ul>
                    <li>How to create and manage databases</li>
                    <li>Creating tables with proper structure</li>
                    <li>Understanding SQL syntax and commands</li>
                    <li>Setting up primary keys and auto-increment</li>
                    <li>Adding constraints and relationships</li>
                </ul>
            </div>

            <div class="content-section">
                <h2>üóÑÔ∏è Creating Your First Database</h2>
                
                <div class="real-world-example">
                    <h3>üè¢ Think of Databases Like Office Buildings</h3>
                    
                    <canvas id="buildingCanvas" width="600" height="300"></canvas>
                    <script>
                        const bldgCtx = document.getElementById('buildingCanvas').getContext('2d');
                        
                        // Draw building
                        bldgCtx.fillStyle = '#667eea';
                        bldgCtx.fillRect(200, 80, 200, 180);
                        
                        // Draw floors (databases)
                        const floors = ['wordpress_db', 'shop_db', 'blog_db'];
                        floors.forEach((floor, i) => {
                            const y = 90 + (i * 55);
                            
                            // Floor
                            bldgCtx.fillStyle = '#f3f4f6';
                            bldgCtx.fillRect(210, y, 180, 45);
                            
                            // Windows (tables)
                            bldgCtx.fillStyle = '#fbbf24';
                            for (let j = 0; j < 4; j++) {
                                bldgCtx.fillRect(220 + (j * 40), y + 10, 25, 25);
                            }
                            
                            // Label
                            bldgCtx.fillStyle = '#1f2937';
                            bldgCtx.font = '12px Arial';
                            bldgCtx.fillText(floor, 220, y + 28);
                        });
                        
                        // Labels
                        bldgCtx.fillStyle = '#333';
                        bldgCtx.font = '14px Arial';
                        bldgCtx.fillText('MySQL Server = Office Building', 200, 30);
                        bldgCtx.fillText('Databases = Floors', 50, 120);
                        bldgCtx.fillText('Tables = Offices', 450, 120);
                        
                        // Arrows
                        bldgCtx.strokeStyle = '#667eea';
                        bldgCtx.beginPath();
                        bldgCtx.moveTo(150, 120);
                        bldgCtx.lineTo(200, 120);
                        bldgCtx.moveTo(400, 120);
                        bldgCtx.lineTo(430, 120);
                        bldgCtx.stroke();
                    </script>
                    
                    <ul>
                        <li>üè¢ <strong>MySQL Server</strong> = The entire office building</li>
                        <li>üèóÔ∏è <strong>Database</strong> = Each floor of the building</li>
                        <li>üìÅ <strong>Tables</strong> = Individual offices on each floor</li>
                        <li>üìÑ <strong>Records</strong> = Files in each office</li>
                    </ul>
                </div>

                <div class="sql-command">
                    <span class="sql-comment">-- Creating a new database is simple!</span><br>
                    <span class="sql-keyword">CREATE DATABASE</span> <span class="sql-string">online_store</span>;<br><br>
                    
                    <span class="sql-comment">-- Use the database</span><br>
                    <span class="sql-keyword">USE</span> <span class="sql-string">online_store</span>;<br><br>
                    
                    <span class="sql-comment">-- See all databases</span><br>
                    <span class="sql-keyword">SHOW</span> <span class="sql-keyword">DATABASES</span>;<br><br>
                    
                    <span class="sql-comment">-- Delete a database (careful!)</span><br>
                    <span class="sql-keyword">DROP DATABASE</span> <span class="sql-keyword">IF EXISTS</span> <span class="sql-string">test_db</span>;
                </div>

                <div class="alert alert-warning">
                    <strong>‚ö†Ô∏è Warning:</strong> <code>DROP DATABASE</code> permanently deletes everything! There's no undo button!
                </div>
            </div>

            <div class="content-section">
                <h2>üìã Creating Your First Table</h2>
                
                <p>Let's create a <strong>users</strong> table for our online store:</p>
                
                <div class="sql-command">
                    <span class="sql-keyword">CREATE TABLE</span> users (<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;id <span class="sql-datatype">INT</span> <span class="sql-keyword">AUTO_INCREMENT PRIMARY KEY</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;username <span class="sql-datatype">VARCHAR(50)</span> <span class="sql-keyword">NOT NULL UNIQUE</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;email <span class="sql-datatype">VARCHAR(100)</span> <span class="sql-keyword">NOT NULL UNIQUE</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;password <span class="sql-datatype">VARCHAR(255)</span> <span class="sql-keyword">NOT NULL</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;first_name <span class="sql-datatype">VARCHAR(50)</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;last_name <span class="sql-datatype">VARCHAR(50)</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;created_at <span class="sql-datatype">TIMESTAMP</span> <span class="sql-keyword">DEFAULT CURRENT_TIMESTAMP</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;updated_at <span class="sql-datatype">TIMESTAMP</span> <span class="sql-keyword">DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP</span><br>
                    );
                </div>

                <div class="table-visualization">
                    <div class="table-header">users Table Structure</div>
                    <div class="table-row header">
                        <div class="table-cell">Column</div>
                        <div class="table-cell">Data Type</div>
                        <div class="table-cell">Constraints</div>
                        <div class="table-cell">Description</div>
                    </div>
                    <div class="table-row">
                        <div class="table-cell">id</div>
                        <div class="table-cell">INT</div>
                        <div class="table-cell">
                            <span class="constraint-badge constraint-pk">PK</span>
                            <span class="constraint-badge constraint-nn">NN</span>
                        </div>
                        <div class="table-cell">Unique identifier</div>
                    </div>
                    <div class="table-row">
                        <div class="table-cell">username</div>
                        <div class="table-cell">VARCHAR(50)</div>
                        <div class="table-cell">
                            <span class="constraint-badge constraint-nn">NN</span>
                            <span class="constraint-badge constraint-uq">UQ</span>
                        </div>
                        <div class="table-cell">User's login name</div>
                    </div>
                    <div class="table-row">
                        <div class="table-cell">email</div>
                        <div class="table-cell">VARCHAR(100)</div>
                        <div class="table-cell">
                            <span class="constraint-badge constraint-nn">NN</span>
                            <span class="constraint-badge constraint-uq">UQ</span>
                        </div>
                        <div class="table-cell">Email address</div>
                    </div>
                </div>

                <div class="terminology-grid">
                    <div class="term-card">
                        <h4>üîë PRIMARY KEY</h4>
                        <p>Unique identifier for each row. Like a social security number - no two are the same!</p>
                    </div>
                    <div class="term-card">
                        <h4>üîÑ AUTO_INCREMENT</h4>
                        <p>Automatically adds 1 to the previous value. Perfect for IDs!</p>
                    </div>
                    <div class="term-card">
                        <h4>‚ùó NOT NULL</h4>
                        <p>This field must have a value. Can't be empty!</p>
                    </div>
                    <div class="term-card">
                        <h4>üéØ UNIQUE</h4>
                        <p>No duplicates allowed. Each value must be different!</p>
                    </div>
                </div>
            </div>

            <div class="content-section">
                <h2>üèóÔ∏è Building Related Tables</h2>
                
                <p>Let's create a complete e-commerce database structure:</p>
                
                <div class="mermaid">
                    graph TB
                        Users[users table]
                        Products[products table]
                        Orders[orders table]
                        OrderItems[order_items table]
                        Categories[categories table]
                        
                        Users -->|has many| Orders
                        Orders -->|has many| OrderItems
                        Products -->|belongs to| Categories
                        Products -->|appears in| OrderItems
                        
                        style Users fill:#667eea,color:white
                        style Products fill:#f59e0b,color:white
                        style Orders fill:#10b981,color:white
                        style OrderItems fill:#ef4444,color:white
                        style Categories fill:#8b5cf6,color:white
                </div>

                <div class="sql-command">
                    <span class="sql-comment">-- Categories table</span><br>
                    <span class="sql-keyword">CREATE TABLE</span> categories (<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;id <span class="sql-datatype">INT</span> <span class="sql-keyword">AUTO_INCREMENT PRIMARY KEY</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;name <span class="sql-datatype">VARCHAR(50)</span> <span class="sql-keyword">NOT NULL</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;description <span class="sql-datatype">TEXT</span><br>
                    );<br><br>
                    
                    <span class="sql-comment">-- Products table with foreign key</span><br>
                    <span class="sql-keyword">CREATE TABLE</span> products (<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;id <span class="sql-datatype">INT</span> <span class="sql-keyword">AUTO_INCREMENT PRIMARY KEY</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;name <span class="sql-datatype">VARCHAR(100)</span> <span class="sql-keyword">NOT NULL</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;description <span class="sql-datatype">TEXT</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;price <span class="sql-datatype">DECIMAL(10,2)</span> <span class="sql-keyword">NOT NULL</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;stock <span class="sql-datatype">INT</span> <span class="sql-keyword">DEFAULT</span> 0,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;category_id <span class="sql-datatype">INT</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;<span class="sql-keyword">FOREIGN KEY</span> (category_id) <span class="sql-keyword">REFERENCES</span> categories(id)<br>
                    );<br><br>
                    
                    <span class="sql-comment">-- Orders table</span><br>
                    <span class="sql-keyword">CREATE TABLE</span> orders (<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;id <span class="sql-datatype">INT</span> <span class="sql-keyword">AUTO_INCREMENT PRIMARY KEY</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;user_id <span class="sql-datatype">INT</span> <span class="sql-keyword">NOT NULL</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;order_date <span class="sql-datatype">DATETIME</span> <span class="sql-keyword">DEFAULT CURRENT_TIMESTAMP</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;total_amount <span class="sql-datatype">DECIMAL(10,2)</span> <span class="sql-keyword">NOT NULL</span>,<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;status <span class="sql-datatype">ENUM</span>('pending', 'processing', 'shipped', 'delivered', 'cancelled'),<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;<span class="sql-keyword">FOREIGN KEY</span> (user_id) <span class="sql-keyword">REFERENCES</span> users(id)<br>
                    );
                </div>
            </div>

            <div class="content-section">
                <h2>üîß Modifying Tables</h2>
                
                <p>Sometimes you need to change a table after creating it. Here's how:</p>
                
                <canvas id="alterTableCanvas" width="600" height="400"></canvas>
                <script>
                    const altCtx = document.getElementById('alterTableCanvas').getContext('2d');
                    
                    // Title
                    altCtx.font = 'bold 16px Arial';
                    altCtx.fillText('Table Evolution: Adding Features Over Time', 150, 30);
                    
                    // Original table
                    altCtx.fillStyle = '#e5e7eb';
                    altCtx.fillRect(50, 60, 150, 120);
                    altCtx.fillStyle = '#667eea';
                    altCtx.fillRect(50, 60, 150, 30);
                    altCtx.fillStyle = 'white';
                    altCtx.font = '12px Arial';
                    altCtx.fillText('Original Table', 90, 80);
                    
                    altCtx.fillStyle = '#333';
                    altCtx.fillText('‚Ä¢ id', 60, 110);
                    altCtx.fillText('‚Ä¢ name', 60, 130);
                    altCtx.fillText('‚Ä¢ email', 60, 150);
                    
                    // Arrow
                    altCtx.strokeStyle = '#667eea';
                    altCtx.lineWidth = 2;
                    altCtx.beginPath();
                    altCtx.moveTo(210, 120);
                    altCtx.lineTo(250, 120);
                    altCtx.stroke();
                    
                    // Add column
                    altCtx.fillStyle = '#10b981';
                    altCtx.fillRect(260, 100, 120, 40);
                    altCtx.fillStyle = 'white';
                    altCtx.fillText('ADD COLUMN', 280, 125);
                    
                    // Arrow
                    altCtx.beginPath();
                    altCtx.moveTo(390, 120);
                    altCtx.lineTo(430, 120);
                    altCtx.stroke();
                    
                    // Updated table
                    altCtx.fillStyle = '#e5e7eb';
                    altCtx.fillRect(440, 60, 150, 160);
                    altCtx.fillStyle = '#667eea';
                    altCtx.fillRect(440, 60, 150, 30);
                    altCtx.fillStyle = 'white';
                    altCtx.fillText('Updated Table', 475, 80);
                    
                    altCtx.fillStyle = '#333';
                    altCtx.fillText('‚Ä¢ id', 450, 110);
                    altCtx.fillText('‚Ä¢ name', 450, 130);
                    altCtx.fillText('‚Ä¢ email', 450, 150);
                    altCtx.fillStyle = '#10b981';
                    altCtx.fillText('‚Ä¢ phone (NEW)', 450, 170);
                    altCtx.fillText('‚Ä¢ address (NEW)', 450, 190);
                    
                    // More operations
                    altCtx.fillStyle = '#f59e0b';
                    altCtx.fillRect(50, 250, 120, 40);
                    altCtx.fillStyle = 'white';
                    altCtx.fillText('MODIFY COLUMN', 65, 275);
                    
                    altCtx.fillStyle = '#ef4444';
                    altCtx.fillRect(190, 250, 120, 40);
                    altCtx.fillStyle = 'white';
                    altCtx.fillText('DROP COLUMN', 210, 275);
                    
                    altCtx.fillStyle = '#8b5cf6';
                    altCtx.fillRect(330, 250, 120, 40);
                    altCtx.fillStyle = 'white';
                    altCtx.fillText('RENAME TABLE', 350, 275);
                    
                    altCtx.fillStyle = '#06b6d4';
                    altCtx.fillRect(470, 250, 120, 40);
                    altCtx.fillStyle = 'white';
                    altCtx.fillText('ADD INDEX', 500, 275);
                </script>

                <div class="sql-command">
                    <span class="sql-comment">-- Add a new column</span><br>
                    <span class="sql-keyword">ALTER TABLE</span> users <span class="sql-keyword">ADD COLUMN</span> phone <span class="sql-datatype">VARCHAR(20)</span>;<br><br>
                    
                    <span class="sql-comment">-- Modify an existing column</span><br>
                    <span class="sql-keyword">ALTER TABLE</span> users <span class="sql-keyword">MODIFY COLUMN</span> phone <span class="sql-datatype">VARCHAR(30)</span> <span class="sql-keyword">NOT NULL</span>;<br><br>
                    
                    <span class="sql-comment">-- Rename a column</span><br>
                    <span class="sql-keyword">ALTER TABLE</span> users <span class="sql-keyword">RENAME COLUMN</span> phone <span class="sql-keyword">TO</span> phone_number;<br><br>
                    
                    <span class="sql-comment">-- Drop a column (careful!)</span><br>
                    <span class="sql-keyword">ALTER TABLE</span> users <span class="sql-keyword">DROP COLUMN</span> phone_number;<br><br>
                    
                    <span class="sql-comment">-- Add an index for faster searches</span><br>
                    <span class="sql-keyword">CREATE INDEX</span> idx_email <span class="sql-keyword">ON</span> users(email);<br><br>
                    
                    <span class="sql-comment">-- Rename a table</span><br>
                    <span class="sql-keyword">ALTER TABLE</span> users <span class="sql-keyword">RENAME TO</span> customers;
                </div>
            </div>

            <div class="content-section">
                <h2>üé® Interactive Table Builder</h2>
                
                <div class="interactive-builder">
                    <h3>Build Your Own Table!</h3>
                    <p>Try creating a table for a blog system:</p>
                    
                    <div>
                        <label>Table Name:</label>
                        <input type="text" class="builder-input" id="tableName" placeholder="e.g., blog_posts">
                    </div>
                    
                    <div>
                        <label>Add Columns:</label>
                        <div id="columnList">
                            <div class="column-entry">
                                <input type="text" placeholder="Column name" style="width: 30%;">
                                <select style="width: 30%; margin: 0 10px;">
                                    <option>INT</option>
                                    <option>VARCHAR(255)</option>
                                    <option>TEXT</option>
                                    <option>DATE</option>
                                    <option>DATETIME</option>
                                </select>
                                <label><input type="checkbox"> NOT NULL</label>
                            </div>
                        </div>
                        <button onclick="addColumn()">+ Add Column</button>
                    </div>
                    
                    <button onclick="generateSQL()" style="background: #667eea; color: white; padding: 10px 20px; border: none; border-radius: 4px; margin-top: 20px;">Generate SQL</button>
                    
                    <div id="generatedSQL" style="margin-top: 20px;"></div>
                </div>
            </div>

            <div class="content-section">
                <h2>üìä Viewing Table Information</h2>
                
                <div class="sql-command">
                    <span class="sql-comment">-- See all tables in current database</span><br>
                    <span class="sql-keyword">SHOW</span> <span class="sql-keyword">TABLES</span>;<br><br>
                    
                    <span class="sql-comment">-- Describe table structure</span><br>
                    <span class="sql-keyword">DESCRIBE</span> users;<br>
                    <span class="sql-comment">-- or</span><br>
                    <span class="sql-keyword">SHOW COLUMNS FROM</span> users;<br><br>
                    
                    <span class="sql-comment">-- See the CREATE TABLE statement</span><br>
                    <span class="sql-keyword">SHOW CREATE TABLE</span> users;<br><br>
                    
                    <span class="sql-comment">-- Get table statistics</span><br>
                    <span class="sql-keyword">SHOW TABLE STATUS LIKE</span> 'users';
                </div>
            </div>

            <div class="practice-exercise">
                <h2>üéÆ Practice Exercise</h2>
                <h3>Create a Library Database</h3>
                
                <p>Create a database for a library system with the following requirements:</p>
                
                <ul>
                    <li>üìö A <strong>books</strong> table with: ISBN, title, author, publication_year, available</li>
                    <li>üë• A <strong>members</strong> table with: member_id, name, email, join_date</li>
                    <li>üìã A <strong>loans</strong> table tracking which member borrowed which book</li>
                </ul>
                
                <details>
                    <summary>üí° Click for Solution</summary>
                    <div class="sql-command">
                        <span class="sql-keyword">CREATE DATABASE</span> library;<br>
                        <span class="sql-keyword">USE</span> library;<br><br>
                        
                        <span class="sql-keyword">CREATE TABLE</span> books (<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;isbn <span class="sql-datatype">VARCHAR(13)</span> <span class="sql-keyword">PRIMARY KEY</span>,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;title <span class="sql-datatype">VARCHAR(200)</span> <span class="sql-keyword">NOT NULL</span>,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;author <span class="sql-datatype">VARCHAR(100)</span> <span class="sql-keyword">NOT NULL</span>,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;publication_year <span class="sql-datatype">YEAR</span>,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;available <span class="sql-datatype">BOOLEAN</span> <span class="sql-keyword">DEFAULT</span> true<br>
                        );<br><br>
                        
                        <span class="sql-keyword">CREATE TABLE</span> members (<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;member_id <span class="sql-datatype">INT</span> <span class="sql-keyword">AUTO_INCREMENT PRIMARY KEY</span>,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;name <span class="sql-datatype">VARCHAR(100)</span> <span class="sql-keyword">NOT NULL</span>,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;email <span class="sql-datatype">VARCHAR(100)</span> <span class="sql-keyword">UNIQUE NOT NULL</span>,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;join_date <span class="sql-datatype">DATE</span> <span class="sql-keyword">DEFAULT</span> (CURRENT_DATE)<br>
                        );<br><br>
                        
                        <span class="sql-keyword">CREATE TABLE</span> loans (<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;loan_id <span class="sql-datatype">INT</span> <span class="sql-keyword">AUTO_INCREMENT PRIMARY KEY</span>,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;member_id <span class="sql-datatype">INT</span>,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;isbn <span class="sql-datatype">VARCHAR(13)</span>,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;loan_date <span class="sql-datatype">DATE</span> <span class="sql-keyword">DEFAULT</span> (CURRENT_DATE),<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;return_date <span class="sql-datatype">DATE</span>,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;<span class="sql-keyword">FOREIGN KEY</span> (member_id) <span class="sql-keyword">REFERENCES</span> members(member_id),<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;<span class="sql-keyword">FOREIGN KEY</span> (isbn) <span class="sql-keyword">REFERENCES</span> books(isbn)<br>
                        );
                    </div>
                </details>
            </div>

            <div class="summary-section">
                <h2>üéØ Key Takeaways</h2>
                <ul>
                    <li><code>CREATE DATABASE</code> creates a new database container</li>
                    <li><code>CREATE TABLE</code> defines the structure for storing data</li>
                    <li>Primary keys uniquely identify each record</li>
                    <li>Foreign keys create relationships between tables</li>
                    <li>Constraints ensure data integrity</li>
                    <li><code>ALTER TABLE</code> lets you modify existing tables</li>
                </ul>
            </div>

            <div class="next-steps">
                <h2>üìö Next Steps</h2>
                <p>Excellent work creating your first databases and tables! Next, we'll explore:</p>
                <ul>
                    <li>Different MySQL data types in detail</li>
                    <li>Choosing the right data type for each column</li>
                    <li>Storage considerations and optimization</li>
                    <li>Special data types for specific needs</li>
                </ul>
                <a href="/03module/data_types.html" class="next-lesson-btn">Continue to Data Types ‚Üí</a>
            </div>
        </section>
    </div>

    <script>
        function addColumn() {
            const columnList = document.getElementById('columnList');
            const newColumn = document.createElement('div');
            newColumn.className = 'column-entry';
            newColumn.innerHTML = `
                <input type="text" placeholder="Column name" style="width: 30%;">
                <select style="width: 30%; margin: 0 10px;">
                    <option>INT</option>
                    <option>VARCHAR(255)</option>
                    <option>TEXT</option>
                    <option>DATE</option>
                    <option>DATETIME</option>
                </select>
                <label><input type="checkbox"> NOT NULL</label>
            `;
            columnList.appendChild(newColumn);
        }
        
        function generateSQL() {
            const tableName = document.getElementById('tableName').value || 'my_table';
            const columns = document.querySelectorAll('.column-entry');
            
            let sql = `CREATE TABLE ${tableName} (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n`;
            
            columns.forEach((col, index) => {
                const name = col.querySelector('input[type="text"]').value;
                const type = col.querySelector('select').value;
                const notNull = col.querySelector('input[type="checkbox"]').checked;
                
                if (name) {
                    sql += `    ${name} ${type}`;
                    if (notNull) sql += ' NOT NULL';
                    if (index < columns.length - 1) sql += ',';
                    sql += '\n';
                }
            });
            
            sql += ');';
            
            document.getElementById('generatedSQL').innerHTML = `
                <div class="sql-command">${sql.replace(/\n/g, '<br>').replace(/ /g, '&nbsp;')}</div>
            `;
        }
        
        // Add Mermaid for diagrams
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof mermaid !== 'undefined') {
                mermaid.initialize({ startOnLoad: true });
            }
        });
    </script>
</body>
</html>