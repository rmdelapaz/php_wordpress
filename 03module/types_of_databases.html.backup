<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Types of Databases - PHP WordPress Course</title>
    <link rel="stylesheet" href="/assets/css/main.css">
    <style>
        .database-type-card {
            background: white;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            padding: 25px;
            margin: 20px 0;
            transition: transform 0.3s;
        }
        .database-type-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        .type-header {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }
        .type-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 28px;
            margin-right: 20px;
        }
        .relational-icon {
            background: linear-gradient(135deg, #667eea, #764ba2);
        }
        .nosql-icon {
            background: linear-gradient(135deg, #10b981, #059669);
        }
        .comparison-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin: 30px 0;
        }
        .feature-list {
            background: #f9fafb;
            padding: 15px;
            border-radius: 8px;
            margin: 10px 0;
        }
        .pros-cons {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin: 15px 0;
        }
        .pros {
            background: #f0fdf4;
            border-left: 4px solid #10b981;
            padding: 15px;
            border-radius: 0 8px 8px 0;
        }
        .cons {
            background: #fef2f2;
            border-left: 4px solid #ef4444;
            padding: 15px;
            border-radius: 0 8px 8px 0;
        }
        .use-case-card {
            background: linear-gradient(135deg, #f0f9ff, #e0f2fe);
            border: 2px solid #0891b2;
            border-radius: 8px;
            padding: 20px;
            margin: 15px 0;
        }
        .comparison-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        .comparison-table th {
            background: #667eea;
            color: white;
            padding: 12px;
            text-align: left;
        }
        .comparison-table td {
            border: 1px solid #e5e7eb;
            padding: 10px;
        }
        .comparison-table tr:nth-child(even) {
            background: #f9fafb;
        }
    </style>
</head>
<body>
    <div class="lesson-container">
        <header class="lesson-header">
            <h1>Types of Databases</h1>
            <p class="lesson-subtitle">Relational vs Non-Relational Database Systems</p>
        </header>

        <nav class="lesson-nav">
            <a href="/03module/database_concepts_terminology.html">‚Üê Previous Lesson</a>
            <a href="/03module/introduction_to_mysql.html">Next Lesson ‚Üí</a>
        </nav>

        <section class="lesson-content">
            <div class="learning-objectives">
                <h2>üéØ What You'll Learn</h2>
                <ul>
                    <li>Differences between relational and non-relational databases</li>
                    <li>When to use each type of database</li>
                    <li>Popular database systems and their uses</li>
                    <li>How WordPress uses relational databases</li>
                    <li>Basic understanding of SQL vs NoSQL</li>
                </ul>
            </div>

            <div class="content-section">
                <h2>üé≠ Two Main Database Types</h2>
                
                <canvas id="databaseTypesCanvas" width="600" height="350"></canvas>
                <script>
                    const ctx = document.getElementById('databaseTypesCanvas').getContext('2d');
                    
                    // Title
                    ctx.font = 'bold 18px Arial';
                    ctx.fillStyle = '#1f2937';
                    ctx.fillText('Database World: Two Main Approaches', 150, 30);
                    
                    // Relational Database (left)
                    ctx.fillStyle = '#ede9fe';
                    ctx.fillRect(50, 60, 250, 250);
                    ctx.fillStyle = '#667eea';
                    ctx.fillRect(50, 60, 250, 40);
                    ctx.fillStyle = 'white';
                    ctx.font = 'bold 16px Arial';
                    ctx.fillText('Relational (SQL)', 120, 85);
                    
                    // Draw tables
                    ctx.fillStyle = '#f3f4f6';
                    ctx.fillRect(70, 120, 100, 80);
                    ctx.fillRect(180, 120, 100, 80);
                    ctx.fillRect(70, 210, 100, 80);
                    
                    // Table labels
                    ctx.fillStyle = '#667eea';
                    ctx.font = '12px Arial';
                    ctx.fillText('Users', 100, 140);
                    ctx.fillText('Orders', 210, 140);
                    ctx.fillText('Products', 95, 230);
                    
                    // Draw relationships
                    ctx.strokeStyle = '#f59e0b';
                    ctx.lineWidth = 2;
                    ctx.beginPath();
                    ctx.moveTo(170, 160);
                    ctx.lineTo(180, 160);
                    ctx.moveTo(120, 210);
                    ctx.lineTo(120, 200);
                    ctx.stroke();
                    
                    // Non-Relational Database (right)
                    ctx.fillStyle = '#f0fdf4';
                    ctx.fillRect(320, 60, 250, 250);
                    ctx.fillStyle = '#10b981';
                    ctx.fillRect(320, 60, 250, 40);
                    ctx.fillStyle = 'white';
                    ctx.font = 'bold 16px Arial';
                    ctx.fillText('Non-Relational (NoSQL)', 370, 85);
                    
                    // Draw documents
                    ctx.fillStyle = '#d1fae5';
                    ctx.fillRect(340, 120, 210, 60);
                    ctx.fillRect(340, 190, 210, 60);
                    
                    // Document content
                    ctx.fillStyle = '#065f46';
                    ctx.font = '11px Courier';
                    ctx.fillText('{ user: "John",', 350, 140);
                    ctx.fillText('  orders: [...],', 350, 155);
                    ctx.fillText('  profile: {...} }', 350, 170);
                    
                    ctx.fillText('{ product: "Laptop",', 350, 210);
                    ctx.fillText('  price: 999,', 350, 225);
                    ctx.fillText('  specs: {...} }', 350, 240);
                    
                    // Bottom labels
                    ctx.fillStyle = '#6b7280';
                    ctx.font = '12px Arial';
                    ctx.fillText('Structured Tables', 120, 330);
                    ctx.fillText('Flexible Documents', 390, 330);
                </script>
            </div>

            <div class="comparison-grid">
                <div class="database-type-card">
                    <div class="type-header">
                        <div class="type-icon relational-icon">üìä</div>
                        <div>
                            <h2>Relational Databases (SQL)</h2>
                            <p style="color: #6b7280;">Structured, table-based systems</p>
                        </div>
                    </div>
                    
                    <p>Think of relational databases like <strong>spreadsheets with superpowers</strong>! üìà Data is organized in tables with strict relationships.</p>
                    
                    <div class="feature-list">
                        <h4>Key Characteristics:</h4>
                        <ul>
                            <li>üìã Data stored in <strong>tables</strong> (rows and columns)</li>
                            <li>üîó <strong>Relationships</strong> between tables</li>
                            <li>‚úÖ <strong>ACID compliance</strong> (data integrity)</li>
                            <li>üîç Uses <strong>SQL</strong> (Structured Query Language)</li>
                            <li>üìê <strong>Fixed schema</strong> (predefined structure)</li>
                        </ul>
                    </div>
                    
                    <div class="pros-cons">
                        <div class="pros">
                            <h4>‚úÖ Advantages</h4>
                            <ul>
                                <li>Data consistency</li>
                                <li>Complex queries</li>
                                <li>Mature technology</li>
                                <li>Strong data integrity</li>
                                <li>Standardized language</li>
                            </ul>
                        </div>
                        <div class="cons">
                            <h4>‚ùå Disadvantages</h4>
                            <ul>
                                <li>Rigid structure</li>
                                <li>Harder to scale</li>
                                <li>Schema changes difficult</li>
                                <li>Can be slower for big data</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="use-case-card">
                        <h4>üéØ Perfect For:</h4>
                        <ul>
                            <li>E-commerce sites (orders, inventory)</li>
                            <li>Banking systems (transactions)</li>
                            <li>CMS like WordPress</li>
                            <li>Any app needing data relationships</li>
                        </ul>
                    </div>
                    
                    <h4>Popular Examples:</h4>
                    <div style="display: flex; gap: 10px; flex-wrap: wrap;">
                        <span style="background: #667eea; color: white; padding: 5px 15px; border-radius: 20px;">MySQL</span>
                        <span style="background: #667eea; color: white; padding: 5px 15px; border-radius: 20px;">PostgreSQL</span>
                        <span style="background: #667eea; color: white; padding: 5px 15px; border-radius: 20px;">SQLite</span>
                        <span style="background: #667eea; color: white; padding: 5px 15px; border-radius: 20px;">Oracle</span>
                        <span style="background: #667eea; color: white; padding: 5px 15px; border-radius: 20px;">SQL Server</span>
                    </div>
                </div>
                
                <div class="database-type-card">
                    <div class="type-header">
                        <div class="type-icon nosql-icon">üìÑ</div>
                        <div>
                            <h2>Non-Relational Databases (NoSQL)</h2>
                            <p style="color: #6b7280;">Flexible, document-based systems</p>
                        </div>
                    </div>
                    
                    <p>Think of NoSQL databases like <strong>flexible filing systems</strong>! üìÅ Data can be stored in various formats without strict rules.</p>
                    
                    <div class="feature-list">
                        <h4>Key Characteristics:</h4>
                        <ul>
                            <li>üìÑ Various formats (documents, key-value, graph)</li>
                            <li>üîÑ <strong>Flexible schema</strong> (or no schema)</li>
                            <li>‚ö° <strong>Horizontal scaling</strong> (add more servers)</li>
                            <li>üöÄ Optimized for <strong>big data</strong></li>
                            <li>üéØ Different query languages</li>
                        </ul>
                    </div>
                    
                    <div class="pros-cons">
                        <div class="pros">
                            <h4>‚úÖ Advantages</h4>
                            <ul>
                                <li>Flexible structure</li>
                                <li>Easy to scale</li>
                                <li>Fast for simple queries</li>
                                <li>Handles unstructured data</li>
                                <li>Great for real-time apps</li>
                            </ul>
                        </div>
                        <div class="cons">
                            <h4>‚ùå Disadvantages</h4>
                            <ul>
                                <li>Less mature</li>
                                <li>Limited complex queries</li>
                                <li>Potential data duplication</li>
                                <li>Less standardization</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="use-case-card">
                        <h4>üéØ Perfect For:</h4>
                        <ul>
                            <li>Social media platforms</li>
                            <li>Real-time analytics</li>
                            <li>IoT data collection</li>
                            <li>Content management</li>
                            <li>Gaming leaderboards</li>
                        </ul>
                    </div>
                    
                    <h4>Popular Examples:</h4>
                    <div style="display: flex; gap: 10px; flex-wrap: wrap;">
                        <span style="background: #10b981; color: white; padding: 5px 15px; border-radius: 20px;">MongoDB</span>
                        <span style="background: #10b981; color: white; padding: 5px 15px; border-radius: 20px;">Redis</span>
                        <span style="background: #10b981; color: white; padding: 5px 15px; border-radius: 20px;">Cassandra</span>
                        <span style="background: #10b981; color: white; padding: 5px 15px; border-radius: 20px;">Firebase</span>
                        <span style="background: #10b981; color: white; padding: 5px 15px; border-radius: 20px;">DynamoDB</span>
                    </div>
                </div>
            </div>

            <div class="content-section">
                <h2>üîç SQL vs NoSQL: Visual Comparison</h2>
                
                <div class="mermaid">
                    graph TB
                        subgraph "SQL Database"
                            A[Users Table]
                            B[Orders Table]
                            C[Products Table]
                            A -->|user_id| B
                            B -->|product_id| C
                        end
                        
                        subgraph "NoSQL Database"
                            D[User Document<br/>contains orders<br/>and preferences]
                            E[Product Document<br/>contains reviews<br/>and inventory]
                        end
                        
                        style A fill:#667eea,color:white
                        style B fill:#667eea,color:white
                        style C fill:#667eea,color:white
                        style D fill:#10b981,color:white
                        style E fill:#10b981,color:white
                </div>
                
                <table class="comparison-table">
                    <thead>
                        <tr>
                            <th>Aspect</th>
                            <th>Relational (SQL)</th>
                            <th>Non-Relational (NoSQL)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><strong>Data Model</strong></td>
                            <td>Tables with rows and columns</td>
                            <td>Documents, key-value, graph, column</td>
                        </tr>
                        <tr>
                            <td><strong>Schema</strong></td>
                            <td>Fixed, must be defined upfront</td>
                            <td>Dynamic, flexible</td>
                        </tr>
                        <tr>
                            <td><strong>Query Language</strong></td>
                            <td>SQL (standardized)</td>
                            <td>Database-specific</td>
                        </tr>
                        <tr>
                            <td><strong>Scalability</strong></td>
                            <td>Vertical (bigger server)</td>
                            <td>Horizontal (more servers)</td>
                        </tr>
                        <tr>
                            <td><strong>ACID Compliance</strong></td>
                            <td>Yes (guaranteed)</td>
                            <td>Sometimes (depends on DB)</td>
                        </tr>
                        <tr>
                            <td><strong>Best For</strong></td>
                            <td>Complex relationships</td>
                            <td>Large amounts of varied data</td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div class="content-section">
                <h2>üéØ Choosing the Right Database</h2>
                
                <canvas id="decisionTreeCanvas" width="600" height="400"></canvas>
                <script>
                    const dtCtx = document.getElementById('decisionTreeCanvas').getContext('2d');
                    
                    // Title
                    dtCtx.font = 'bold 16px Arial';
                    dtCtx.fillStyle = '#1f2937';
                    dtCtx.fillText('Database Decision Tree', 220, 30);
                    
                    // Root question
                    dtCtx.fillStyle = '#667eea';
                    dtCtx.fillRect(200, 50, 200, 40);
                    dtCtx.fillStyle = 'white';
                    dtCtx.font = '12px Arial';
                    dtCtx.fillText('Do you need complex', 235, 70);
                    dtCtx.fillText('relationships?', 255, 85);
                    
                    // Yes branch
                    dtCtx.strokeStyle = '#667eea';
                    dtCtx.lineWidth = 2;
                    dtCtx.beginPath();
                    dtCtx.moveTo(250, 90);
                    dtCtx.lineTo(150, 140);
                    dtCtx.stroke();
                    
                    dtCtx.fillStyle = '#10b981';
                    dtCtx.fillRect(80, 140, 140, 40);
                    dtCtx.fillStyle = 'white';
                    dtCtx.fillText('Need transactions?', 105, 165);
                    
                    // No branch
                    dtCtx.beginPath();
                    dtCtx.moveTo(350, 90);
                    dtCtx.lineTo(450, 140);
                    dtCtx.stroke();
                    
                    dtCtx.fillStyle = '#f59e0b';
                    dtCtx.fillRect(380, 140, 140, 40);
                    dtCtx.fillStyle = 'white';
                    dtCtx.fillText('Need flexibility?', 410, 165);
                    
                    // Final recommendations
                    dtCtx.fillStyle = '#667eea';
                    dtCtx.fillRect(50, 220, 200, 60);
                    dtCtx.fillStyle = 'white';
                    dtCtx.font = 'bold 14px Arial';
                    dtCtx.fillText('Use SQL Database', 95, 245);
                    dtCtx.font = '11px Arial';
                    dtCtx.fillText('MySQL, PostgreSQL', 95, 265);
                    
                    dtCtx.fillStyle = '#10b981';
                    dtCtx.fillRect(350, 220, 200, 60);
                    dtCtx.fillStyle = 'white';
                    dtCtx.font = 'bold 14px Arial';
                    dtCtx.fillText('Use NoSQL Database', 385, 245);
                    dtCtx.font = '11px Arial';
                    dtCtx.fillText('MongoDB, Redis', 405, 265);
                    
                    // Labels
                    dtCtx.fillStyle = '#6b7280';
                    dtCtx.font = '11px Arial';
                    dtCtx.fillText('YES', 190, 120);
                    dtCtx.fillText('NO', 370, 120);
                    dtCtx.fillText('YES', 130, 210);
                    dtCtx.fillText('YES', 430, 210);
                </script>
                
                <h3>Ask Yourself These Questions:</h3>
                <ol>
                    <li><strong>Do I need ACID compliance?</strong> ‚Üí SQL</li>
                    <li><strong>Will my data structure change often?</strong> ‚Üí NoSQL</li>
                    <li><strong>Do I need complex queries and reports?</strong> ‚Üí SQL</li>
                    <li><strong>Am I dealing with huge amounts of unstructured data?</strong> ‚Üí NoSQL</li>
                    <li><strong>Is my team familiar with SQL?</strong> ‚Üí SQL might be easier</li>
                </ol>
            </div>

            <div class="content-section">
                <h2>üåê WordPress and MySQL</h2>
                
                <div class="use-case-card" style="background: linear-gradient(135deg, #fef3c7, #fde68a);">
                    <h3>Why WordPress Uses MySQL (Relational Database)</h3>
                    
                    <p>WordPress chose MySQL because:</p>
                    <ul>
                        <li>üìä <strong>Structured Content:</strong> Posts, pages, users all have defined relationships</li>
                        <li>üîó <strong>Complex Relationships:</strong> Users ‚Üí Posts ‚Üí Comments ‚Üí Categories</li>
                        <li>‚úÖ <strong>Data Integrity:</strong> Important for content management</li>
                        <li>üåç <strong>Wide Support:</strong> Available on almost all web hosts</li>
                        <li>üí∞ <strong>Free & Open Source:</strong> No licensing costs</li>
                        <li>‚ö° <strong>Performance:</strong> Fast enough for most websites</li>
                    </ul>
                    
                    <h4>WordPress Database Tables:</h4>
                    <pre><code>wp_posts      ‚Üí All posts and pages
wp_users      ‚Üí User accounts
wp_comments   ‚Üí Comments on posts
wp_options    ‚Üí Site settings
wp_postmeta   ‚Üí Additional post data
wp_usermeta   ‚Üí Additional user data
wp_terms      ‚Üí Categories and tags
wp_termmeta   ‚Üí Category/tag metadata</code></pre>
                </div>
            </div>

            <div class="practice-exercise">
                <h2>üéÆ Interactive Exercise</h2>
                <h3>Match the Database Type</h3>
                
                <p>Which database type would be best for these scenarios?</p>
                
                <div style="display: grid; gap: 15px;">
                    <div style="padding: 15px; background: #f9fafb; border-radius: 8px;">
                        <p><strong>1. Online banking system</strong></p>
                        <label><input type="radio" name="q1"> NoSQL</label>
                        <label><input type="radio" name="q1"> SQL ‚úì</label>
                        <p style="color: #6b7280; font-size: 14px;">Needs transactions, data integrity</p>
                    </div>
                    
                    <div style="padding: 15px; background: #f9fafb; border-radius: 8px;">
                        <p><strong>2. Social media feed</strong></p>
                        <label><input type="radio" name="q2"> NoSQL ‚úì</label>
                        <label><input type="radio" name="q2"> SQL</label>
                        <p style="color: #6b7280; font-size: 14px;">Flexible content, real-time updates</p>
                    </div>
                    
                    <div style="padding: 15px; background: #f9fafb; border-radius: 8px;">
                        <p><strong>3. E-commerce inventory</strong></p>
                        <label><input type="radio" name="q3"> NoSQL</label>
                        <label><input type="radio" name="q3"> SQL ‚úì</label>
                        <p style="color: #6b7280; font-size: 14px;">Product-order relationships, transactions</p>
                    </div>
                </div>
            </div>

            <div class="summary-section">
                <h2>üéØ Key Takeaways</h2>
                <ul>
                    <li>SQL databases use structured tables with relationships</li>
                    <li>NoSQL databases offer flexibility and scalability</li>
                    <li>SQL is best for complex relationships and transactions</li>
                    <li>NoSQL excels with large amounts of varied data</li>
                    <li>WordPress uses MySQL (SQL) for its structured content</li>
                    <li>Choose based on your specific needs, not trends</li>
                </ul>
            </div>

            <div class="next-steps">
                <h2>üìö Next Steps</h2>
                <p>Now that you understand database types, let's dive into:</p>
                <ul>
                    <li>Introduction to MySQL specifically</li>
                    <li>Why MySQL is perfect for web development</li>
                    <li>MySQL features and capabilities</li>
                </ul>
                <a href="/03module/introduction_to_mysql.html" class="next-lesson-btn">Continue to Introduction to MySQL ‚Üí</a>
            </div>
        </section>
    </div>

    <script>
        // Add Mermaid for diagrams
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof mermaid !== 'undefined') {
                mermaid.initialize({ startOnLoad: true });
            }
        });
    </script>
</body>
</html>