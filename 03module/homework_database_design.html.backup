<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Homework: Design a Database Schema - PHP WordPress Course</title>
    <link rel="stylesheet" href="/assets/css/main.css">
    <style>
        .homework-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 40px;
            border-radius: 12px;
            margin-bottom: 30px;
            text-align: center;
        }
        .homework-header h1 {
            margin: 0 0 10px 0;
            font-size: 2.5rem;
        }
        .homework-deadline {
            background: rgba(255, 255, 255, 0.2);
            display: inline-block;
            padding: 10px 20px;
            border-radius: 20px;
            margin-top: 10px;
        }
        .project-card {
            background: white;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            padding: 30px;
            margin: 20px 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .requirement-item {
            display: flex;
            align-items: flex-start;
            margin: 15px 0;
            padding: 15px;
            background: #f9fafb;
            border-left: 4px solid #667eea;
            border-radius: 0 8px 8px 0;
        }
        .requirement-number {
            background: #667eea;
            color: white;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 15px;
            flex-shrink: 0;
        }
        .deliverable-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
        .deliverable-card {
            background: linear-gradient(135deg, #f0f9ff, #e0f2fe);
            border: 2px solid #0891b2;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
        }
        .deliverable-icon {
            font-size: 48px;
            margin-bottom: 10px;
        }
        .checklist {
            background: #f0fdf4;
            border: 2px solid #10b981;
            border-radius: 8px;
            padding: 20px;
            margin: 20px 0;
        }
        .checklist-item {
            display: flex;
            align-items: center;
            margin: 10px 0;
        }
        .checkbox {
            width: 20px;
            height: 20px;
            margin-right: 10px;
        }
        .grading-rubric {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        .grading-rubric th {
            background: #667eea;
            color: white;
            padding: 12px;
            text-align: left;
        }
        .grading-rubric td {
            border: 1px solid #e5e7eb;
            padding: 10px;
        }
        .grading-rubric tr:nth-child(even) {
            background: #f9fafb;
        }
        .points-badge {
            background: #fbbf24;
            color: #92400e;
            padding: 4px 12px;
            border-radius: 20px;
            font-weight: bold;
        }
        .submission-box {
            background: #ede9fe;
            border: 2px solid #8b5cf6;
            border-radius: 8px;
            padding: 25px;
            margin: 30px 0;
            text-align: center;
        }
        .submit-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px 40px;
            border: none;
            border-radius: 50px;
            font-size: 18px;
            cursor: pointer;
            margin-top: 20px;
        }
        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        }
        .hint-box {
            background: #fef3c7;
            border-left: 4px solid #f59e0b;
            padding: 15px;
            margin: 15px 0;
            border-radius: 0 8px 8px 0;
        }
        .example-schema {
            background: #1e293b;
            color: #10b981;
            padding: 20px;
            border-radius: 8px;
            font-family: 'Courier New', monospace;
            overflow-x: auto;
            margin: 15px 0;
        }
    </style>
</head>
<body>
    <div class="lesson-container">
        <div class="homework-header">
            <h1>üìù Homework Assignment</h1>
            <h2>Design a Complete Database Schema</h2>
            <div class="homework-deadline">
                ‚è∞ Due: Before Next Session
            </div>
        </div>

        <nav class="lesson-nav">
            <a href="/03module/data_types.html">‚Üê Previous Lesson</a>
            <a href="/module3.html">Back to Module 3 ‚Üí</a>
        </nav>

        <section class="lesson-content">
            <div class="project-card">
                <h2>üéØ Your Mission</h2>
                <p>You've been hired by a new startup called <strong>"BookHub"</strong> - an online bookstore that wants to compete with Amazon! They need you to design their database schema from scratch.</p>
                
                <div class="real-world-example">
                    <h3>üìö BookHub Requirements</h3>
                    <p>The client wants to:</p>
                    <ul>
                        <li>Sell books online</li>
                        <li>Allow customers to create accounts</li>
                        <li>Track orders and shipping</li>
                        <li>Allow book reviews and ratings</li>
                        <li>Manage inventory</li>
                        <li>Have multiple book categories</li>
                        <li>Track authors and publishers</li>
                    </ul>
                </div>
            </div>

            <div class="project-card">
                <h2>üìã Project Requirements</h2>
                
                <div class="requirement-item">
                    <div class="requirement-number">1</div>
                    <div>
                        <h3>Database Design</h3>
                        <p>Create a complete database schema with at least 8 tables:</p>
                        <ul>
                            <li>Users/Customers table</li>
                            <li>Books table</li>
                            <li>Authors table</li>
                            <li>Categories/Genres table</li>
                            <li>Orders table</li>
                            <li>Order_Items table</li>
                            <li>Reviews table</li>
                            <li>Publishers table (optional bonus)</li>
                        </ul>
                    </div>
                </div>

                <div class="requirement-item">
                    <div class="requirement-number">2</div>
                    <div>
                        <h3>Relationships</h3>
                        <p>Implement proper relationships between tables:</p>
                        <ul>
                            <li>One-to-Many relationships (e.g., User ‚Üí Orders)</li>
                            <li>Many-to-Many relationships (e.g., Books ‚Üî Authors)</li>
                            <li>Foreign keys with proper constraints</li>
                        </ul>
                    </div>
                </div>

                <div class="requirement-item">
                    <div class="requirement-number">3</div>
                    <div>
                        <h3>Data Types</h3>
                        <p>Use appropriate data types for each column:</p>
                        <ul>
                            <li>Correct numeric types (INT, DECIMAL for prices)</li>
                            <li>Appropriate string types (VARCHAR vs TEXT)</li>
                            <li>Proper date/time fields</li>
                            <li>ENUM for status fields where appropriate</li>
                        </ul>
                    </div>
                </div>

                <div class="requirement-item">
                    <div class="requirement-number">4</div>
                    <div>
                        <h3>Constraints & Keys</h3>
                        <p>Include necessary constraints:</p>
                        <ul>
                            <li>Primary keys for all tables</li>
                            <li>NOT NULL where required</li>
                            <li>UNIQUE constraints (e.g., email)</li>
                            <li>DEFAULT values where appropriate</li>
                            <li>CHECK constraints for data validation</li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="project-card">
                <h2>üì¶ Deliverables</h2>
                
                <div class="deliverable-grid">
                    <div class="deliverable-card">
                        <div class="deliverable-icon">üó∫Ô∏è</div>
                        <h3>ER Diagram</h3>
                        <p>Visual diagram showing all tables and relationships</p>
                        <small>Can be hand-drawn or use tools like draw.io</small>
                    </div>
                    
                    <div class="deliverable-card">
                        <div class="deliverable-icon">üíæ</div>
                        <h3>SQL Script</h3>
                        <p>Complete CREATE TABLE statements for all tables</p>
                        <small>Should run without errors</small>
                    </div>
                    
                    <div class="deliverable-card">
                        <div class="deliverable-icon">üìÑ</div>
                        <h3>Documentation</h3>
                        <p>Brief description of each table's purpose</p>
                        <small>Explain your design decisions</small>
                    </div>
                    
                    <div class="deliverable-card">
                        <div class="deliverable-icon">üß™</div>
                        <h3>Sample Data</h3>
                        <p>INSERT statements with 5 sample records per table</p>
                        <small>Show that relationships work</small>
                    </div>
                </div>
            </div>

            <div class="project-card">
                <h2>üí° Hints & Tips</h2>
                
                <div class="hint-box">
                    <h3>üí≠ Think About These Questions:</h3>
                    <ul>
                        <li>Can a book have multiple authors? (Yes! Use a junction table)</li>
                        <li>How will you track inventory? (Stock quantity in books table)</li>
                        <li>What happens when a user is deleted? (CASCADE or RESTRICT?)</li>
                        <li>How will you store book prices? (DECIMAL(10,2) for accuracy)</li>
                        <li>Should reviews be anonymous? (Consider NULL vs NOT NULL for user_id)</li>
                    </ul>
                </div>

                <h3>Example: Books Table Structure</h3>
                <div class="example-schema">
CREATE TABLE books (
    isbn VARCHAR(13) PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10,2) NOT NULL,
    stock_quantity INT DEFAULT 0,
    publication_date DATE,
    page_count INT,
    language VARCHAR(20) DEFAULT 'English',
    publisher_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (publisher_id) REFERENCES publishers(id),
    INDEX idx_title (title),
    CHECK (price >= 0),
    CHECK (stock_quantity >= 0)
);
                </div>

                <div class="mermaid">
                    graph TB
                        Users[users]
                        Books[books]
                        Authors[authors]
                        BookAuthors[book_authors]
                        Orders[orders]
                        OrderItems[order_items]
                        Reviews[reviews]
                        Categories[categories]
                        
                        Users -->|places| Orders
                        Orders -->|contains| OrderItems
                        OrderItems -->|references| Books
                        Books -->|belongs to| Categories
                        Books -->|many-to-many| BookAuthors
                        BookAuthors -->|many-to-many| Authors
                        Users -->|writes| Reviews
                        Reviews -->|about| Books
                        
                        style Users fill:#667eea,color:white
                        style Books fill:#10b981,color:white
                        style Orders fill:#f59e0b,color:white
                </div>
            </div>

            <div class="project-card">
                <h2>üìä Grading Rubric</h2>
                
                <table class="grading-rubric">
                    <thead>
                        <tr>
                            <th>Criteria</th>
                            <th>Points</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Database Structure</td>
                            <td><span class="points-badge">25 pts</span></td>
                            <td>All required tables created with proper structure</td>
                        </tr>
                        <tr>
                            <td>Relationships</td>
                            <td><span class="points-badge">25 pts</span></td>
                            <td>Correct foreign keys and relationship types</td>
                        </tr>
                        <tr>
                            <td>Data Types</td>
                            <td><span class="points-badge">20 pts</span></td>
                            <td>Appropriate data types for each column</td>
                        </tr>
                        <tr>
                            <td>Constraints</td>
                            <td><span class="points-badge">15 pts</span></td>
                            <td>Proper use of NOT NULL, UNIQUE, CHECK</td>
                        </tr>
                        <tr>
                            <td>Documentation</td>
                            <td><span class="points-badge">10 pts</span></td>
                            <td>Clear explanation of design decisions</td>
                        </tr>
                        <tr>
                            <td>Sample Data</td>
                            <td><span class="points-badge">5 pts</span></td>
                            <td>Realistic test data that demonstrates relationships</td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <th>Total</th>
                            <th><span class="points-badge">100 pts</span></th>
                            <th></th>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div class="checklist">
                <h2>‚úÖ Submission Checklist</h2>
                <p>Before submitting, make sure you have:</p>
                
                <div class="checklist-item">
                    <input type="checkbox" class="checkbox">
                    <label>Created all 8 required tables</label>
                </div>
                <div class="checklist-item">
                    <input type="checkbox" class="checkbox">
                    <label>Added primary keys to all tables</label>
                </div>
                <div class="checklist-item">
                    <input type="checkbox" class="checkbox">
                    <label>Implemented foreign key relationships</label>
                </div>
                <div class="checklist-item">
                    <input type="checkbox" class="checkbox">
                    <label>Used appropriate data types (especially DECIMAL for prices)</label>
                </div>
                <div class="checklist-item">
                    <input type="checkbox" class="checkbox">
                    <label>Added NOT NULL constraints where needed</label>
                </div>
                <div class="checklist-item">
                    <input type="checkbox" class="checkbox">
                    <label>Created indexes for frequently searched columns</label>
                </div>
                <div class="checklist-item">
                    <input type="checkbox" class="checkbox">
                    <label>Tested SQL script - it runs without errors</label>
                </div>
                <div class="checklist-item">
                    <input type="checkbox" class="checkbox">
                    <label>Added sample data (5 records per table)</label>
                </div>
                <div class="checklist-item">
                    <input type="checkbox" class="checkbox">
                    <label>Documented design decisions</label>
                </div>
            </div>

            <div class="project-card">
                <h2>üöÄ Bonus Challenges</h2>
                <p>For extra credit, consider adding:</p>
                
                <canvas id="bonusCanvas" width="600" height="300"></canvas>
                <script>
                    const bonusCtx = document.getElementById('bonusCanvas').getContext('2d');
                    
                    // Draw bonus items
                    const bonuses = [
                        { text: 'Wishlist Feature', points: '+5', color: '#10b981', y: 50 },
                        { text: 'Discount Codes', points: '+5', color: '#f59e0b', y: 100 },
                        { text: 'Book Recommendations', points: '+10', color: '#8b5cf6', y: 150 },
                        { text: 'Inventory Tracking', points: '+5', color: '#ef4444', y: 200 },
                        { text: 'Stored Procedures', points: '+10', color: '#06b6d4', y: 250 }
                    ];
                    
                    bonuses.forEach((bonus, index) => {
                        // Star
                        bonusCtx.fillStyle = bonus.color;
                        bonusCtx.font = '24px Arial';
                        bonusCtx.fillText('‚≠ê', 50, bonus.y);
                        
                        // Text
                        bonusCtx.fillStyle = '#333';
                        bonusCtx.font = '16px Arial';
                        bonusCtx.fillText(bonus.text, 90, bonus.y);
                        
                        // Points
                        bonusCtx.fillStyle = bonus.color;
                        bonusCtx.fillRect(400, bonus.y - 20, 80, 30);
                        bonusCtx.fillStyle = 'white';
                        bonusCtx.font = 'bold 14px Arial';
                        bonusCtx.fillText(bonus.points, 425, bonus.y);
                    });
                    
                    // Title
                    bonusCtx.fillStyle = '#667eea';
                    bonusCtx.font = 'bold 18px Arial';
                    bonusCtx.fillText('Extra Credit Opportunities', 200, 20);
                </script>
                
                <ul>
                    <li><strong>Wishlist table:</strong> Users can save books for later</li>
                    <li><strong>Discount codes table:</strong> Promotional codes system</li>
                    <li><strong>Recommendation engine:</strong> "Customers who bought this also bought..."</li>
                    <li><strong>Advanced inventory:</strong> Track when books need reordering</li>
                    <li><strong>Stored procedures:</strong> Create procedures for common operations</li>
                </ul>
            </div>

            <div class="submission-box">
                <h2>üì§ How to Submit</h2>
                <ol style="text-align: left; max-width: 600px; margin: 0 auto;">
                    <li>Create a folder named: <code>lastname_firstname_bookHub</code></li>
                    <li>Include these files:
                        <ul>
                            <li><code>schema.sql</code> - Your CREATE TABLE statements</li>
                            <li><code>sample_data.sql</code> - Your INSERT statements</li>
                            <li><code>er_diagram.png</code> - Your ER diagram</li>
                            <li><code>documentation.txt</code> - Your design notes</li>
                        </ul>
                    </li>
                    <li>Zip the folder</li>
                    <li>Upload to the course platform</li>
                </ol>
                
                <button class="submit-btn" onclick="alert('Upload your homework on the course platform!')">
                    Submit Assignment
                </button>
            </div>

            <div class="project-card" style="background: linear-gradient(135deg, #fef3c7, #fde68a);">
                <h2>üéì Learning Outcomes</h2>
                <p>By completing this assignment, you will:</p>
                <ul>
                    <li>‚úÖ Apply database design principles to a real-world scenario</li>
                    <li>‚úÖ Practice creating complex relationships between tables</li>
                    <li>‚úÖ Make decisions about appropriate data types</li>
                    <li>‚úÖ Implement data integrity through constraints</li>
                    <li>‚úÖ Think through edge cases and business logic</li>
                    <li>‚úÖ Create documentation for your database design</li>
                </ul>
            </div>

            <div class="next-steps">
                <h2>üí™ You've Got This!</h2>
                <p>Remember:</p>
                <ul>
                    <li>Start with the ER diagram to visualize relationships</li>
                    <li>Write CREATE TABLE statements one at a time</li>
                    <li>Test each table before moving to the next</li>
                    <li>Ask for help if you get stuck!</li>
                </ul>
                
                <p style="font-size: 1.2em; font-weight: bold; text-align: center; color: #667eea;">
                    Good luck with your BookHub database! üöÄ
                </p>
            </div>
        </section>
    </div>

    <script>
        // Add interactivity to checkboxes
        document.querySelectorAll('.checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                if (this.checked) {
                    this.parentElement.style.textDecoration = 'line-through';
                    this.parentElement.style.opacity = '0.6';
                } else {
                    this.parentElement.style.textDecoration = 'none';
                    this.parentElement.style.opacity = '1';
                }
            });
        });
        
        // Add Mermaid for diagrams
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof mermaid !== 'undefined') {
                mermaid.initialize({ startOnLoad: true });
            }
        });
    </script>
</body>
</html>