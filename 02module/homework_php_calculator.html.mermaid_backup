<!DOCTYPE html>

<html lang="en">
<head>
<meta charset="utf-8"/>
<meta content="width=device-width, initial-scale=1.0" name="viewport"/>
<meta content="ie=edge" http-equiv="X-UA-Compatible"/>
<!-- SEO Meta Tags -->
<title>Building a PHP Calculator Program - PHP WordPress Course</title>
<meta content="Build a functional calculator." name="description"/>
<meta content="PHP, WordPress, web development, homework:, php, calculator" name="keywords"/>
<meta content="PHP WordPress Course" name="author"/>
<!-- Favicon -->
<link href="/favicon.png" rel="icon" type="image/png"/>
<link href="/favicon.png" rel="apple-touch-icon"/>
<!-- CSS -->
<link href="/assets/css/main.css" rel="stylesheet"/><link href="/assets/css/sidebar-enhanced.css" rel="stylesheet"/><link href="/assets/css/sidebar-toggle.css" rel="stylesheet"/>

<style>
/* Global diagram and SVG styles */
.mermaid-converted,
.svg-container,
.diagram {
    margin: 1.5rem auto !important;
    padding: 1rem !important;
    text-align: center !important;
    overflow: hidden !important;
    max-width: 100% !important;
    background: #f8f9fa;
    border-radius: 8px;
    border: 1px solid #dee2e6;
}

.mermaid-converted svg,
.svg-container svg,
.diagram svg {
    max-width: 100% !important;
    height: auto !important;
    display: block !important;
    margin: 0 auto !important;
}

/* Fix for decision diamonds */
.decision-node polygon,
polygon.decision {
    fill: #fff3cd !important;
    stroke: #856404 !important;
    stroke-width: 2px !important;
}

/* Remove excessive bottom margins */
.mermaid-converted + *,
.svg-container + *,
.diagram + * {
    margin-top: 1.5rem !important;
}

/* Center content vertically in containers */
.mermaid-converted > *,
.svg-container > *,
.diagram > * {
    vertical-align: middle;
}
</style>

</head>
<body>
<!-- Skip to main content -->
<a class="sr-only" href="#main-content">Skip to main content</a>
<div class="page-wrapper">
<!-- Header -->
<header class="site-header" role="banner">
<div class="header-container">
<div class="site-branding">
<a class="site-logo" href="/">
<h1 class="site-title">PHP WordPress Development</h1>
</a>
</div>
<nav aria-label="Main navigation" class="main-navigation" role="navigation">
<button aria-expanded="false" aria-label="Toggle navigation" class="mobile-menu-btn">
<span></span>
<span></span>
<span></span>
</button>
<div class="nav-menu">
<ul class="nav-list">
<li class="nav-item"><a class="nav-link" href="/">Home</a></li>
<li class="nav-item dropdown">
<button aria-haspopup="true" class="nav-link dropdown-toggle active">Modules</button>
<div class="dropdown-menu">
<a class="dropdown-item" href="/module1.html">Module 1: Web Fundamentals</a>
<a class="dropdown-item active" href="/module2.html">Module 2: PHP Fundamentals</a>
<a class="dropdown-item" href="/module3.html">Module 3: MySQL Database</a>
<a class="dropdown-item" href="/module4.html">Module 4: WordPress &amp; Docker</a>
<a class="dropdown-item" href="/module5.html">Module 5: Theme Development</a>
<a class="dropdown-item" href="/module6.html">Module 6: Plugin Development</a>
<a class="dropdown-item" href="/module7.html">Module 7: Advanced WordPress</a>
<a class="dropdown-item" href="/module8.html">Module 8: Deployment</a>
<a class="dropdown-item" href="/module9.html">Module 9: Final Project</a>
</div>
</li>
<li class="nav-item"><a class="nav-link" href="/resources.html">Resources</a></li>
<li class="nav-item"><a class="nav-link" href="/about.html">About</a></li>
</ul>
</div>
</nav>
<div class="search-container">
<div class="search-input-wrapper">
<svg class="search-icon" fill="currentColor" height="20" viewbox="0 0 20 20" width="20" style="max-width: 100%; height: auto; display: block; margin: 0 auto;" viewBox="0 0 20 20">
<path clip-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" fill-rule="evenodd"></path>
</svg>
<input aria-label="Search" class="search-input" placeholder="Search lessons..." type="search"/>
</div>
<div class="search-results"></div>
</div>
</div>
</header>
<!-- Progress Bar -->
<div class="progress-container">
<div class="progress-header">
<h2 class="progress-title">Course Progress</h2>
<span class="progress-text">Loading...</span>
</div>
<div class="progress-bar">
<div class="progress-bar-fill">
<span class="progress-bar-text"></span>
</div>
</div>
</div>
<!-- Breadcrumb -->
<nav aria-label="Breadcrumb" class="breadcrumb container">
<ol class="breadcrumb-list">
<li class="breadcrumb-item">
<a href="/">Home</a>
<span class="breadcrumb-separator">/</span>
</li>
<li class="breadcrumb-item">
<a href="/module2.html">Module 2</a>
<span class="breadcrumb-separator">/</span>
</li>
<li class="breadcrumb-item">
<span aria-current="page">Homework: PHP Calculator</span>
</li>
</ol>
</nav>
<!-- Main Content -->
<main class="main-content" id="main-content" role="main">
<div class="container">
<div class="content-with-sidebar">
<!-- Sidebar -->
<aside class="sidebar">

<div class="sidebar-nav">
<h3 class="sidebar-title">Module 2: PHP Fundamentals</h3>
<div class="sidebar-section">
<h4 class="sidebar-section-title">Session 2</h4>
<ul class="sidebar-menu">
<li><a class="sidebar-link" href="/02module/php_arithmetic_operators.html">Arithmetic Operators</a></li>
<li><a class="sidebar-link" href="/02module/php_assignment_operators.html">Assignment Operators</a></li>
<li><a class="sidebar-link" href="/02module/php_comparison_operators.html">Comparison Operators</a></li>
<li><a class="sidebar-link" href="/02module/php_logical_operators.html">Logical Operators</a></li>
<li><a class="sidebar-link" href="/02module/php_string_operators.html">String Operators</a></li>
<li><a class="sidebar-link" href="/02module/php_array_operators.html">Array Operators</a></li>
<li><a class="sidebar-link" href="/02module/php_type_operators.html">Type Operators</a></li>
<li><a class="sidebar-link" href="/02module/php_operator_precedence.html">Operator Precedence</a></li>
<li class="active"><a class="sidebar-link active" href="/02module/homework_php_calculator.html">Homework: Calculator</a></li>
</ul>
</div>
<div class="sidebar-section">
<h4 class="sidebar-section-title">Quick Links</h4>
<ul class="sidebar-menu">
<li><a class="sidebar-link" href="/module2.html">Module Overview</a></li>
<li><a class="sidebar-link prev-session" href="/02module/review_php_setup.html">← Prev: Session 1: PHP Setup</a></li>
<li><a class="sidebar-link next-session" href="/02module/php_if.html">Next: Session 3: Conditionals →</a></li>
<li><a class="sidebar-link" href="/module1.html">← Previous Module</a></li>
<li><a class="sidebar-link" href="/module3.html">Next Module →</a></li>
<li><a class="sidebar-link" href="/resources.html">Resources</a></li>
</ul>
</div>
</div></aside>
<!-- Main Lesson Content -->
<article class="lesson-content">
<header class="lesson-header">
<h1>Building a PHP Calculator Program</h1>
<div class="lesson-meta">
<div class="lesson-meta-item">
<svg fill="currentColor" height="20" width="20" style="max-width: 100%; height: auto; display: block; margin: 0 auto;" viewBox="0 0 20 20">
<path d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
</svg>
<span>Duration: 90 minutes</span>
</div>
<div class="lesson-meta-item">
<svg fill="currentColor" height="20" width="20" style="max-width: 100%; height: auto; display: block; margin: 0 auto;" viewBox="0 0 20 20">
<path d="M12 14l9-5-9-5-9 5 9 5z"></path>
</svg>
<span>Module 2: PHP Projects</span>
</div>
</div>
</header>
<!-- Learning Objectives -->
<div class="lesson-objectives">
<h2>Learning Objectives</h2>
<ul>
<li>Master PHP programming concepts</li>
<li>Write clean, maintainable code</li>
<li>Apply best practices</li>
<li>Build dynamic applications</li>
</ul>
</div>
<!-- Lesson Body -->
<div class="lesson-body">

<section>
            <h2>Problem Description</h2>
            <p>
                In this tutorial, we'll create a PHP calculator program that performs basic arithmetic operations. This program will demonstrate how PHP operators work and how they can be used in a practical application.
            </p>
            
            <div class="requirements">
                <h3>Requirements</h3>
                <ul>
                    <li>Create a PHP program that takes two numbers as input</li>
                    <li>The program should perform the following operations:
                        <ul>
                            <li>Addition (+)</li>
                            <li>Subtraction (-)</li>
                            <li>Multiplication (*)</li>
                            <li>Division (/)</li>
                            <li>Modulus (%)</li>
                        </ul>
                    </li>
                    <li>Display the results of each operation</li>
                    <li>Handle potential errors (e.g., division by zero)</li>
                </ul>
            </div>
        </section>

        <section>
            <h2>George Polya's 4-Step Problem Solving Method</h2>
            <p>
                We'll approach this problem using George Polya's four-step problem-solving method:
            </p>
            
<div class="mermaid-converted" style="margin: 1.5rem auto; padding: 1rem; text-align: center; overflow: hidden; max-width: 100%;">
<div style="margin-bottom: 10px; font-size: 12px; color: #6c757d; text-transform: uppercase; letter-spacing: 1px;">Diagram
</div>
    <svg viewBox="0 0 800 400" xmlns="http://www.w3.org/2000/svg" 
     style="max-width: 100%; height: auto; display: block; margin: 0 auto; background: white; border-radius: 8px;; max-width: 100%; height: auto; display: block; margin: 0 auto;">
    <!-- Embedded styles for this diagram only -->
    <defs>
        <style type="text/css">
            .node-rect { fill: #e1f5fe; stroke: #01579b; stroke-width: 2px; }
            .node-rect:hover { fill: #b3e5fc; }
            .node-text { fill: #01579b; font-family: 'Segoe UI', Arial, sans-serif; font-size: 14px; font-weight: 500; }
            .connection-line { stroke: #546e7a; stroke-width: 2px; fill: none; }
            .arrow-marker { fill: #546e7a; }
            .diagram-title { fill: #263238; font-size: 18px; font-weight: bold; }
            .subgraph-rect { fill: #fff3e0; stroke: #e65100; stroke-width: 1px; stroke-dasharray: 5,5; opacity: 0.3; }
        </style>
        
        <!-- Arrow marker -->
        <marker id="arrow" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L0,6 L9,3 z" class="arrow-marker"/>
        </marker>
    </defs>
    
    <!-- Background -->
    <rect x="0" y="0" width="800" height="400" fill="#fafafa" rx="8"/>
    
    <line x1="516.6666666666667" y1="80" x2="283.33333333333337" y2="200" 
          class="connection-line" marker-end="url(#arrow)"/>
    <line x1="283.33333333333337" y1="200" x2="516.6666666666667" y2="200" 
          class="connection-line" marker-end="url(#arrow)"/>
    <line x1="516.6666666666667" y1="80" x2="516.6666666666667" y2="200" 
          class="connection-line" marker-end="url(#arrow)"/>
    <text x="516.6666666666667" y="135.0" text-anchor="middle" 
          class="node-text" font-size="12">&gt; C[3. Execute the Plan] C </text>
    <rect x="173.33333333333337" y="55" width="220" height="50" 
          rx="5" class="node-rect"/>
    <text x="283.33333333333337" y="80" text-anchor="middle" dominant-baseline="middle" 
          class="node-text">1. Understand the Problem</text>
    <rect x="442.66666666666674" y="55" width="148" height="50" 
          rx="5" class="node-rect"/>
    <text x="516.6666666666667" y="80" text-anchor="middle" dominant-baseline="middle" 
          class="node-text">2. Devise a Plan</text>
    <rect x="197.33333333333337" y="175" width="172" height="50" 
          rx="5" class="node-rect"/>
    <text x="283.33333333333337" y="200" text-anchor="middle" dominant-baseline="middle" 
          class="node-text">3. Execute the Plan</text>
    <rect x="410.66666666666674" y="175" width="212" height="50" 
          rx="5" class="node-rect"/>
    <text x="516.6666666666667" y="200" text-anchor="middle" dominant-baseline="middle" 
          class="node-text">4. Look Back and Reflect</text>
</svg>
</div>
        </section>

        <section>
            <h2>Step 1: Understand the Problem</h2>
            <p>
                Before writing code, let's make sure we understand what we're building.
            </p>
            
            <div class="understanding">
                <h3>Inputs and Outputs</h3>
                <ul>
                    <li><strong>Inputs:</strong> Two numbers and an operation selection</li>
                    <li><strong>Outputs:</strong> The result of the arithmetic operation</li>
                </ul>
                
                <h3>PHP Operators We'll Use</h3>
                <p>
                    PHP provides several operators for arithmetic operations:
                </p>
                <table>
                    <tr>
                        <th>Operator</th>
                        <th>Name</th>
                        <th>Example</th>
                        <th>Result</th>
                    </tr>
                    <tr>
                        <td>+</td>
                        <td>Addition</td>
                        <td>$a + $b</td>
                        <td>Sum of $a and $b</td>
                    </tr>
                    <tr>
                        <td>-</td>
                        <td>Subtraction</td>
                        <td>$a - $b</td>
                        <td>Difference of $a and $b</td>
                    </tr>
                    <tr>
                        <td>*</td>
                        <td>Multiplication</td>
                        <td>$a * $b</td>
                        <td>Product of $a and $b</td>
                    </tr>
                    <tr>
                        <td>/</td>
                        <td>Division</td>
                        <td>$a / $b</td>
                        <td>Quotient of $a and $b</td>
                    </tr>
                    <tr>
                        <td>%</td>
                        <td>Modulus</td>
                        <td>$a % $b</td>
                        <td>Remainder of $a divided by $b</td>
                    </tr>
                </table>
                
                <h3>Edge Cases</h3>
                <ul>
                    <li>Division by zero (which is undefined in mathematics)</li>
                    <li>Modulus with zero as the divisor (also problematic)</li>
                    <li>Non-numeric inputs</li>
                </ul>
                <p>
                    Our program will need to handle these situations gracefully.
                </p>
            </div>
        </section>

        <section>
            <h2>Step 2: Devise a Plan</h2>
            <p>
                Now that we understand the problem, let's create a plan to build our calculator.
            </p>
            
            <div class="plan">
                <h3>Whiteboard Plan</h3>
                <ol>
                    <li>Create a PHP file for our calculator program</li>
                    <li>Build an HTML form to collect user inputs (two numbers and the desired operation)</li>
                    <li>Process the form submission with PHP</li>
                    <li>Validate the inputs (check if they're numeric)</li>
                    <li>Perform the selected operation using PHP arithmetic operators</li>
                    <li>Handle potential errors (like division by zero)</li>
                    <li>Display the result to the user</li>
                </ol>
                
                <h3>Flow Diagram</h3>
                
<div class="mermaid-converted" style="margin: 1.5rem auto; padding: 1rem; text-align: center; overflow: hidden; max-width: 100%;">
<div style="margin-bottom: 10px; font-size: 12px; color: #6c757d; text-transform: uppercase; letter-spacing: 1px;">Diagram
</div>
    <svg viewBox="0 0 800 700" xmlns="http://www.w3.org/2000/svg" 
     style="max-width: 100%; height: auto; display: block; margin: 0 auto; background: white; border-radius: 8px;; max-width: 100%; height: auto; display: block; margin: 0 auto;">
    <!-- Embedded styles for this diagram only -->
    <defs>
        <style type="text/css">
            .node-rect { fill: #e1f5fe; stroke: #01579b; stroke-width: 2px; }
            .node-rect:hover { fill: #b3e5fc; }
            .node-text { fill: #01579b; font-family: 'Segoe UI', Arial, sans-serif; font-size: 14px; font-weight: 500; }
            .connection-line { stroke: #546e7a; stroke-width: 2px; fill: none; }
            .arrow-marker { fill: #546e7a; }
            .diagram-title { fill: #263238; font-size: 18px; font-weight: bold; }
            .subgraph-rect { fill: #fff3e0; stroke: #e65100; stroke-width: 1px; stroke-dasharray: 5,5; opacity: 0.3; }
        </style>
        
        <!-- Arrow marker -->
        <marker id="arrow" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L0,6 L9,3 z" class="arrow-marker"/>
        </marker>
    </defs>
    
    <!-- Background -->
    <rect x="0" y="0" width="800" height="700" fill="#fafafa" rx="8"/>
    
    <line x1="516.6666666666667" y1="80" x2="400.0" y2="200" 
          class="connection-line" marker-end="url(#arrow)"/>
    <line x1="400.0" y1="320" x2="575.0" y2="320" 
          class="connection-line" marker-end="url(#arrow)"/>
    <line x1="225.0" y1="320" x2="400.0" y2="440" 
          class="connection-line" marker-end="url(#arrow)"/>
    <line x1="575.0" y1="320" x2="400.0" y2="440" 
          class="connection-line" marker-end="url(#arrow)"/>
    <line x1="400.0" y1="200" x2="225.0" y2="320" 
          class="connection-line" marker-end="url(#arrow)"/>
    <text x="312.5" y="255.0" text-anchor="middle" 
          class="node-text" font-size="12">Invalid</text>
    <line x1="400.0" y1="200" x2="400.0" y2="320" 
          class="connection-line" marker-end="url(#arrow)"/>
    <text x="400.0" y="255.0" text-anchor="middle" 
          class="node-text" font-size="12">Valid</text>
    <line x1="400.0" y1="200" x2="575.0" y2="320" 
          class="connection-line" marker-end="url(#arrow)"/>
    <text x="487.5" y="255.0" text-anchor="middle" 
          class="node-text" font-size="12">&gt;|Valid| E[Perform Selected Operation] E </text>
    <line x1="225.0" y1="320" x2="400.0" y2="440" 
          class="connection-line" marker-end="url(#arrow)"/>
    <text x="312.5" y="375.0" text-anchor="middle" 
          class="node-text" font-size="12">&gt; G[End] F </text>
    <rect x="223.33333333333337" y="55" width="120" height="50" 
          rx="5" class="node-rect"/>
    <text x="283.33333333333337" y="80" text-anchor="middle" dominant-baseline="middle" 
          class="node-text">Start</text>
    <rect x="446.66666666666674" y="55" width="140" height="50" 
          rx="5" class="node-rect"/>
    <text x="516.6666666666667" y="80" text-anchor="middle" dominant-baseline="middle" 
          class="node-text">Get User Inputs</text>
    <rect x="330.0" y="175" width="140" height="50" 
          rx="5" class="node-rect"/>
    <text x="400.0" y="200" text-anchor="middle" dominant-baseline="middle" 
          class="node-text">Validate Inputs</text>
    <rect x="143.0" y="295" width="164" height="50" 
          rx="5" class="node-rect"/>
    <text x="225.0" y="320" text-anchor="middle" dominant-baseline="middle" 
          class="node-text">Show Error Message</text>
    <rect x="286.0" y="295" width="228" height="50" 
          rx="5" class="node-rect"/>
    <text x="400.0" y="320" text-anchor="middle" dominant-baseline="middle" 
          class="node-text">Perform Selected Operation</text>
    <rect x="509.0" y="295" width="132" height="50" 
          rx="5" class="node-rect"/>
    <text x="575.0" y="320" text-anchor="middle" dominant-baseline="middle" 
          class="node-text">Display Result</text>
    <rect x="340.0" y="415" width="120" height="50" 
          rx="5" class="node-rect"/>
    <text x="400.0" y="440" text-anchor="middle" dominant-baseline="middle" 
          class="node-text">End</text>
</svg>
</div>
                
                <h3>Solution Approaches</h3>
                <p>
                    We can implement this calculator in a few different ways:
                </p>
                <ul>
                    <li><strong>Basic approach:</strong> Use if-elseif statements to determine which operation to perform</li>
                    <li><strong>Switch statement approach:</strong> Use a switch statement to select the operation</li>
                    <li><strong>Function-based approach:</strong> Create separate functions for each operation</li>
                </ul>
                
                <h3>Pseudocode</h3>
                <pre>###CODE_BLOCK_0###</pre>
            </div>
        </section>

        <section>
            <h2>Step 3: Execute the Plan</h2>
            <p>
                Now let's implement our plan by writing the actual PHP code.
            </p>
            
            <div class="implementation">
                <h3>Basic Solution: If-Elseif Approach</h3>
                <p>
                    Create a file named <code>calculator.php</code> in your web server's root directory (e.g., <code>/var/www/html/</code> on Linux or <code>C:\xampp\htdocs\</code> on Windows with XAMPP).
                </p>
                <pre>###CODE_BLOCK_4###</pre>
                
                <h3>Code Explanation</h3>
                <ul>
                    <li><strong>HTML Form:</strong> We create a form with two input fields for the numbers and a dropdown to select the operation</li>
                    <li><strong>Form Processing:</strong> When the form is submitted, we retrieve the user inputs using $_POST</li>
                    <li><strong>Input Validation:</strong> We check if both inputs are numeric using the <code>is_numeric()</code> function</li>
                    <li><strong>Type Conversion:</strong> We convert the inputs to floating-point numbers using <code>floatval()</code></li>
                    <li><strong>Operation Selection:</strong> We use if-elseif statements to perform the selected operation</li>
                    <li><strong>Error Handling:</strong> We check for division by zero and modulus by zero</li>
                    <li><strong>Result Display:</strong> We display the calculation and its result to the user</li>
                </ul>
                
                <div class="analogy">
                    <h3>Operator Analogy: Kitchen Tools</h3>
                    <p>
                        Think of PHP operators like different kitchen tools. Each has a specific purpose:
                    </p>
                    <ul>
                        <li>Addition (+) is like a mixing bowl that combines ingredients</li>
                        <li>Subtraction (-) is like a measuring cup that removes a specific amount</li>
                        <li>Multiplication (*) is like a recipe multiplier that scales up ingredients</li>
                        <li>Division (/) is like a cake cutter that divides portions equally</li>
                        <li>Modulus (%) is like a timer that tells you the remainder of minutes after counting hours</li>
                    </ul>
                    <p>
                        Just as you choose the right kitchen tool for each cooking task, you select the appropriate operator for each mathematical operation.
                    </p>
                </div>
                
                <h3>Alternative Solution: Switch Statement Approach</h3>
                <p>
                    Let's refactor our calculator to use a switch statement instead of if-elseif. Create a file named <code>calculator_switch.php</code>:
                </p>
                <pre>###CODE_BLOCK_8###</pre>
                
                <h3>Advanced Solution: Function-Based Approach</h3>
                <p>
                    For a more organized solution, we can use functions for each operation. Create a file named <code>calculator_functions.php</code>:
                </p>
                <pre>###CODE_BLOCK_10###</pre>
                
                <h3>Visual Representation of Arithmetic Operations</h3>
                <svg viewBox="0 0 700 300" xmlns="http://www.w3.org/2000/svg" style="max-width: 100%; height: auto; display: block; margin: 0 auto;">
                    <defs>
                        <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="0" refY="3.5" orient="auto">
                            <polygon points="0 0, 10 3.5, 0 7" fill="#333"/>
                        </marker>
                    </defs>
                    
                    <!-- Addition -->
                    <rect x="50" y="50" width="100" height="50" fill="#ffcccc" stroke="#333" />
                    <text x="100" y="80" text-anchor="middle" font-size="16">5</text>
<text x="165" y="80" text-anchor="middle" font-size="20">+</text>
<rect x="180" y="50" width="100" height="50" fill="#ffcccc" stroke="#333" />
                    <text x="230" y="80" text-anchor="middle" font-size="16">3</text>
<text x="295" y="80" text-anchor="middle" font-size="20">=</text>
<rect x="310" y="50" width="100" height="50" fill="#ccffcc" stroke="#333" />
                    <text x="360" y="80" text-anchor="middle" font-size="16">8</text>
                    
                    <!-- Subtraction -->
                    <rect x="50" y="120" width="100" height="50" fill="#ffcccc" stroke="#333" />
                    <text x="100" y="150" text-anchor="middle" font-size="16">10</text>
<text x="165" y="150" text-anchor="middle" font-size="20">-</text>
<rect x="180" y="120" width="100" height="50" fill="#ffcccc" stroke="#333" />
                    <text x="230" y="150" text-anchor="middle" font-size="16">4</text>
<text x="295" y="150" text-anchor="middle" font-size="20">=</text>
<rect x="310" y="120" width="100" height="50" fill="#ccffcc" stroke="#333" />
                    <text x="360" y="150" text-anchor="middle" font-size="16">6</text>
                    
                    <!-- Multiplication -->
                    <rect x="50" y="190" width="100" height="50" fill="#ffcccc" stroke="#333" />
                    <text x="100" y="220" text-anchor="middle" font-size="16">3</text>
<text x="165" y="220" text-anchor="middle" font-size="20">*</text>
<rect x="180" y="190" width="100" height="50" fill="#ffcccc" stroke="#333" />
                    <text x="230" y="220" text-anchor="middle" font-size="16">4</text>
<text x="295" y="220" text-anchor="middle" font-size="20">=</text>
<rect x="310" y="190" width="100" height="50" fill="#ccffcc" stroke="#333" />
                    <text x="360" y="220" text-anchor="middle" font-size="16">12</text>
                    
                    <!-- Division -->
                    <rect x="480" y="50" width="100" height="50" fill="#ffcccc" stroke="#333" />
                    <text x="530" y="80" text-anchor="middle" font-size="16">10</text>
<text x="595" y="80" text-anchor="middle" font-size="20">/</text>
<rect x="610" y="50" width="100" height="50" fill="#ffcccc" stroke="#333" />
                    <text x="660" y="80" text-anchor="middle" font-size="16">2</text>
                    
                    <line x1="610" y1="110" x2="710" y2="110" stroke="#333" stroke-width="2"/>
                    
                    <rect x="610" y="120" width="100" height="50" fill="#ccffcc" stroke="#333" />
                    <text x="660" y="150" text-anchor="middle" font-size="16">5</text>
                    
                    <!-- Modulus -->
                    <rect x="480" y="190" width="100" height="50" fill="#ffcccc" stroke="#333" />
                    <text x="530" y="220" text-anchor="middle" font-size="16">7</text>
<text x="595" y="220" text-anchor="middle" font-size="20">%</text>
<rect x="610" y="190" width="100" height="50" fill="#ffcccc" stroke="#333" />
                    <text x="660" y="220" text-anchor="middle" font-size="16">3</text>
<text x="725" y="220" text-anchor="middle" font-size="20">=</text>
<rect x="740" y="190" width="100" height="50" fill="#ccffcc" stroke="#333" />
                    <text x="790" y="220" text-anchor="middle" font-size="16">1</text>
                </svg>
            </div>
        </section>

        <section>
            <h2>Step 4: Look Back and Reflect</h2>
            <p>
                Now that we've implemented our PHP calculator, let's reflect on what we've built and consider potential improvements.
            </p>
            
            <div class="reflection">
                <h3>Testing the Solution</h3>
                <p>
                    We should test our calculator with various inputs to ensure it works correctly:
                </p>
                <ul>
                    <li>Test with positive numbers (e.g., 5 + 3, 10 - 4, 3 * 4, 10 / 2, 7 % 3)</li>
                    <li>Test with negative numbers (e.g., -5 + 3, 10 - (-4), -3 * -4)</li>
                    <li>Test with decimal numbers (e.g., 5.5 + 3.2, 10.7 - 4.2, 3.5 * 4.2)</li>
                    <li>Test division by zero and modulus by zero (should show error messages)</li>
                    <li>Test with non-numeric inputs (should show validation error)</li>
                </ul>
                
                <h3>What We've Learned About PHP Operators</h3>
                <ul>
                    <li><strong>Arithmetic Operators:</strong> We've used all the basic arithmetic operators (+, -, *, /, %)</li>
                    <li><strong>Assignment Operator:</strong> We've used the basic assignment operator (=) to store results</li>
                    <li><strong>Comparison Operators:</strong> We've used comparison operators in our conditional statements (==, ===)</li>
                    <li><strong>Logical Operators:</strong> We've used the logical OR operator (||) in our validation</li>
                </ul>
                
                <h3>Possible Improvements</h3>
                <p>
                    Here are some ways we could enhance our calculator:
                </p>
                <ul>
                    <li>Add more operations (e.g., exponentiation, square root, trigonometric functions)</li>
                    <li>Implement a calculation history feature</li>
                    <li>Add support for more complex expressions (e.g., 2 + 3 * 4)</li>
                    <li>Create a more visually appealing user interface with CSS</li>
                    <li>Add keyboard shortcuts for common operations</li>
                </ul>
                
                <div class="real-world">
                    <h3>Real-World Applications</h3>
                    <p>
                        The concepts and techniques we've used in this calculator have many real-world applications:
                    </p>
                    <ul>
                        <li><strong>E-commerce:</strong> Calculating prices, taxes, discounts, and shipping costs</li>
                        <li><strong>Financial Applications:</strong> Calculating interest, loan payments, and investment returns</li>
                        <li><strong>Scientific Applications:</strong> Performing complex calculations and data analysis</li>
                        <li><strong>Educational Tools:</strong> Creating interactive learning applications</li>
                    </ul>
                </div>
            </div>
        </section>

        <section>
            <h2>Additional Operators in PHP</h2>
            <p>
                Our calculator focused on the basic arithmetic operators, but PHP provides many other operators that you can explore:
            </p>
            
            <div class="more-operators">
                <h3>Assignment Operators</h3>
                <table>
                    <tr>
                        <th>Operator</th>
                        <th>Example</th>
                        <th>Equivalent To</th>
                    </tr>
                    <tr>
                        <td>=</td>
                        <td>$a = $b</td>
                        <td>$a = $b</td>
                    </tr>
                    <tr>
                        <td>+=</td>
                        <td>$a += $b</td>
                        <td>$a = $a + $b</td>
                    </tr>
                    <tr>
                        <td>-=</td>
                        <td>$a -= $b</td>
                        <td>$a = $a - $b</td>
                    </tr>
                    <tr>
                        <td>*=</td>
                        <td>$a *= $b</td>
                        <td>$a = $a * $b</td>
                    </tr>
                    <tr>
                        <td>/=</td>
                        <td>$a /= $b</td>
                        <td>$a = $a / $b</td>
                    </tr>
                    <tr>
                        <td>%=</td>
                        <td>$a %= $b</td>
                        <td>$a = $a % $b</td>
                    </tr>
                </table>
                
                <h3>Comparison Operators</h3>
                <table>
                    <tr>
                        <th>Operator</th>
                        <th>Name</th>
                        <th>Example</th>
                        <th>Result</th>
                    </tr>
                    <tr>
                        <td>==</td>
                        <td>Equal</td>
                        <td>$a == $b</td>
                        <td>True if $a is equal to $b after type juggling</td>
                    </tr>
                    <tr>
                        <td>===</td>
                        <td>Identical</td>
                        <td>$a === $b</td>
                        <td>True if $a is equal to $b, and they are of the same type</td>
                    </tr>
                    <tr>
                        <td>!=</td>
                        <td>Not equal</td>
                        <td>$a != $b</td>
                        <td>True if $a is not equal to $b after type juggling</td>
                    </tr>
                    <tr>
                        <td>!==</td>
                        <td>Not identical</td>
                        <td>$a !== $b</td>
                        <td>True if $a is not equal to $b, or they are not of the same type</td>
                    </tr>
                    <tr>
                        <td>&lt;</td>
                        <td>Less than</td>
                        <td>$a &lt; $b</td>
                        <td>True if $a is less than $b</td>
                    </tr>
                    <tr>
                        <td>&gt;</td>
                        <td>Greater than</td>
                        <td>$a &gt; $b</td>
                        <td>True if $a is greater than $b</td>
                    </tr>
                    <tr>
                        <td>&lt;=</td>
                        <td>Less than or equal to</td>
                        <td>$a &lt;= $b</td>
                        <td>True if $a is less than or equal to $b</td>
                    </tr>
                    <tr>
                        <td>&gt;=</td>
                        <td>Greater than or equal to</td>
                        <td>$a &gt;= $b</td>
                        <td>True if $a is greater than or equal to $b</td>
                    </tr>
                    <tr>
                        <td>&lt;=&gt;</td>
                        <td>Spaceship (PHP 7+)</td>
                        <td>$a &lt;=&gt; $b</td>
                        <td>Returns -1 if $a < $b, 0 if $a == $b, or 1 if $a > $b</td>
                    </tr>
                </table>
                
                <h3>Logical Operators</h3>
                <table>
                    <tr>
                        <th>Operator</th>
                        <th>Name</th>
                        <th>Example</th>
                        <th>Result</th>
                    </tr>
                    <tr>
                        <td>&&</td>
                        <td>And</td>
                        <td>$a && $b</td>
                        <td>True if both $a and $b are true</td>
                    </tr>
                    <tr>
                        <td>||</td>
                        <td>Or</td>
                        <td>$a || $b</td>
                        <td>True if either $a or $b is true</td>
                    </tr>
                    <tr>
                        <td>!</td>
                        <td>Not</td>
                        <td>!$a</td>
                        <td>True if $a is not true</td>
                    </tr>
                </table>
            </div>
        </section>

        <section>
            <h2>Additional Resources and Practice</h2>
            <div class="resources">
                <h3>Further Learning</h3>
                <ul>
                    <li><a href="https://www.php.net/manual/en/language.operators.php" target="_blank">PHP Manual: Operators</a></li>
                    <li><a href="https://www.php.net/manual/en/language.operators.arithmetic.php" target="_blank">PHP Manual: Arithmetic Operators</a></li>
                    <li><a href="https://www.php.net/manual/en/function.is-numeric.php" target="_blank">PHP Manual: is_numeric()</a></li>
                    <li><a href="https://www.php.net/manual/en/control-structures.switch.php" target="_blank">PHP Manual: Switch Statements</a></li>
                </ul>
                
                <h3>Practice Challenges</h3>
                <ol>
                    <li>Enhance the calculator with additional operations (e.g., exponentiation using the ** operator)</li>
                    <li>Add a memory feature to store and recall previous results</li>
                    <li>Implement a scientific calculator with trigonometric functions</li>
                    <li>Build a mortgage calculator using PHP operators and functions</li>
                    <li>Create a currency converter using PHP operators and exchange rates</li>
                </ol>
            </div>
        </section>
            </div>
<!-- Lesson Navigation -->
<div class="lesson-navigation">
<a class="lesson-nav-button prev" href="/module2.html">
<svg fill="currentColor" height="20" viewbox="0 0 20 20" width="20" style="max-width: 100%; height: auto; display: block; margin: 0 auto;" viewBox="0 0 20 20">
<path d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"></path>
</svg>
<span>
<small>Back to</small><br/>
                                    Module 2 Overview
                                </span>
</a>
<button class="complete-lesson-btn">
                                Mark as Complete
                            </button>
<a class="lesson-nav-button next" href="/module3.html">
<span>
<small>Next Module</small><br/>
                                    Module 3: MySQL Database
                                </span>
<svg fill="currentColor" height="20" viewbox="0 0 20 20" width="20" style="max-width: 100%; height: auto; display: block; margin: 0 auto;" viewBox="0 0 20 20">
<path d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"></path>
</svg>
</a>
</div>
</article>
</div>
</div>
</main>
<!-- Footer -->
<footer class="site-footer" role="contentinfo">
<div class="footer-container">
<div class="footer-content">
<div class="footer-section footer-about">
<h3>PHP WordPress Development</h3>
<p>Complete Web Development Course</p>
</div>
<div class="footer-section">
<h4>Quick Links</h4>
<ul class="footer-links">
<li><a href="/">Home</a></li>
<li><a href="/module2.html">Module 2</a></li>
<li><a href="/resources.html">Resources</a></li>
</ul>
</div>
<div class="footer-section">
<h4>Support</h4>
<ul class="footer-links">
<li><a href="/help.html">Help Center</a></li>
<li><a href="/faq.html">FAQ</a></li>
<li><a href="/contact.html">Contact</a></li>
</ul>
</div>
</div>
<div class="footer-bottom">
<div class="footer-bottom-content">
<p class="copyright">© 2025 PHP WordPress Development Course</p>
<nav class="footer-bottom-links">
<a href="/privacy.html">Privacy</a>
<span class="separator">|</span>
<a href="/terms.html">Terms</a>
</nav>
</div>
</div>
</div>
</footer>
</div>
<!-- Back to Top -->
<button aria-label="Back to top" class="back-to-top" id="back-to-top">
<svg fill="none" height="24" stroke="currentColor" stroke-width="2" viewbox="0 0 24 24" width="24" style="max-width: 100%; height: auto; display: block; margin: 0 auto;" viewBox="0 0 2 24">
<path d="M12 19V5M12 5l-7 7M12 5l7 7"></path>
</svg>
</button>
<!-- JavaScript -->
<script src="/assets/js/navigation.js"></script>
<script src="/assets/js/site-config.js"></script>
<script src="/assets/js/sidebar-toggle.js"></script>
</body>
</html>